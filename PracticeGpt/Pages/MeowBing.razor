@page "/meowbing"
@using System;
@using System.Collections;
@using PracticeGpt.Data;
@inject BingWebSearchService BingWebSearchService;
@inject GptService GptService;

<PageTitle>Meow Bing</PageTitle>
<div class="wrapper">
    <h1>Meow Bing</h1>

    <div class="container text-container">
        <form class="input-group mb-3" @onsubmit="AddChat">
            <input type="text"
                   class="form-control"
                   placeholder="Enter your question"
                   aria-label="Enter your question"
                   @bind="inputValue">
            <button class="btn btn-outline-secondary"
                    type="submit"
                    disabled=@isLoading
                    id="enter-button">
                Enter
            </button>
        </form>
        <div class="d-flex flex-column">
            @foreach (var chat in chatList)
            {
                <ChatBubble Context="@chat.ChatContent" AuthorType="@chat.authorType" />
            }
        </div>
    </div>
</div>

@code {
    private bool isLoading = false;
    private List<Chat> chatList = new List<Chat>();
    private string? inputValue;
    private async void AddChat()
    {
        if (inputValue == null || inputValue == "")
        {
            return;
        }
        isLoading = true;
        StateHasChanged();
        chatList.Add(new Chat
        {
            ChatContent = inputValue,
            Time = DateTime.Now,
            authorType = ChatAuthorType.User,
        });
        StateHasChanged();
        var keywords = GptService.ExtractKeywords(inputValue);
        inputValue = "";
        StateHasChanged();
        chatList.Add(new Chat
        {
            ChatContent = "Searching for" + keywords,
            Time = DateTime.Now,
            authorType = ChatAuthorType.System,
        });
        StateHasChanged();
        var bingWebSearchResult = BingWebSearchService.Search(keywords);
        var response = await GptService.Chat(inputValue, bingWebSearchResult);
        chatList.Add(new Chat
        {
            ChatContent = response,
            Time = DateTime.Now,
            authorType = ChatAuthorType.Gpt,
        });
        StateHasChanged();
        isLoading = false;
    }
}

